<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruruku</title>
    <link>/ruruku/</link>
    <description>Recent content on Ruruku</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Dec 2018 11:34:56 +0000</lastBuildDate>
    
	<atom:link href="/ruruku/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>/ruruku/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/ruruku/introduction/</guid>
      <description>Ruruku is a manual test coordinator. Its goal is to make it easier for developers, teams, QA folks and robots to coordinate their testing efforts.
We think that testcase descriptions should live next to your code - in Ruruku the testplan is just a YAML file. When the time has come to go through the tests, submit your testplan to a Ruruku instance and start testing. Every tester (man or machine) can claim test cases, contribute their results and watch for updates.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>/ruruku/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/ruruku/getting-started/</guid>
      <description>Ruruku ships as a single executable that contains the ruruku server and command-line interface. The former stores the data, serves the web-based UI and offers a gRPC API. You can talk to this server using the UI or a command-line interface. The latter can also be used to create testplans and add testcases.
Download Ruruku Ruruku can be downloaded from the release page. It runs on Linux, OSX and Windows.</description>
    </item>
    
    <item>
      <title>Command Line Interface</title>
      <link>/ruruku/cli/ruruku/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku/</guid>
      <description> ruruku A simple manual test coordinator
Synopsis A simple manual test coordinator
Options  --config string config file (default is $HOME/.ruruku.yaml) -h, --help help for ruruku -v, --verbose Sets the log level to debug  SEE ALSO  ruruku plan - Creates a new testplan ruruku serve - Starts a ruruku API server ruruku session - Controls a test session/run ruruku start - Creates a ruruku API server and starts a session ruruku test - Claim or contribute to tests  Auto generated by spf13/cobra on 7-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku plan</title>
      <link>/ruruku/cli/ruruku_plan/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_plan/</guid>
      <description>ruruku plan Creates a new testplan
Synopsis Creates a new testplan. It goes into interactive mode if called without flags, e.g.: ruruku plan
Most fields are available as flags as well, e.g.: ruruku plan -f testplan.yaml &amp;ndash;name Demo ruruku plan -f testplan.yaml add &amp;ndash;name &amp;ldquo;My testcase&amp;rdquo; &amp;ndash;id tc1 &amp;ndash;group grp
ruruku plan [flags]  Options  -f, --filename string the output filename -h, --help help for plan -i, --id string ID of the testplan -n, --name string name of the testplan -y, --non-interactive do not use an interactive prompt.</description>
    </item>
    
    <item>
      <title>ruruku plan add</title>
      <link>/ruruku/cli/ruruku_plan_add/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_plan_add/</guid>
      <description>ruruku plan add Add a testcase to a plan
Synopsis Add a testcase to a plan
ruruku plan add [flags]  Options  -d, --description string long description - can be markdown -g, --group string testcase group -h, --help help for add --id string testcase ID (must be unique within the group) --min-tester-count uint32 number of testers for this testcase --must-pass test must pass for the testsuite to pass -n, --name string name/short description of the testcase -s, --steps string steps to perform during the test - can be markdown  Options inherited from parent commands  --config string config file (default is $HOME/.</description>
    </item>
    
    <item>
      <title>ruruku serve</title>
      <link>/ruruku/cli/ruruku_serve/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_serve/</guid>
      <description> ruruku serve Starts a ruruku API server
Synopsis Starts a ruruku API server
ruruku serve [flags]  Options  -h, --help help for serve --ui-port int Port to run UI the server on (default 8080)  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -v, --verbose Sets the log level to debug  SEE ALSO  ruruku - A simple manual test coordinator  Auto generated by spf13/cobra on 7-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku session</title>
      <link>/ruruku/cli/ruruku_session/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_session/</guid>
      <description>ruruku session Controls a test session/run
Synopsis Controls a test session/run
ruruku session [flags]  Options  -h, --help help for session -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --server string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) --timeout uint32 Request timeout in seconds (default 10)  Options inherited from parent commands  --config string config file (default is $HOME/.</description>
    </item>
    
    <item>
      <title>ruruku session close</title>
      <link>/ruruku/cli/ruruku_session_close/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_session_close/</guid>
      <description> ruruku session close Closes a testing session
Synopsis Closes a testing session
ruruku session close &amp;lt;session-id&amp;gt; [flags]  Options  -h, --help help for close  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --server string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) --timeout uint32 Request timeout in seconds (default 10) -v, --verbose Sets the log level to debug  SEE ALSO  ruruku session - Controls a test session/run  Auto generated by spf13/cobra on 7-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku session describe</title>
      <link>/ruruku/cli/ruruku_session_describe/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_session_describe/</guid>
      <description> ruruku session describe Prints session details and its testcases
Synopsis Prints session details and its testcases
ruruku session describe [flags]  Options  -h, --help help for describe  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --server string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) --timeout uint32 Request timeout in seconds (default 10) -v, --verbose Sets the log level to debug  SEE ALSO  ruruku session - Controls a test session/run  Auto generated by spf13/cobra on 7-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku session join</title>
      <link>/ruruku/cli/ruruku_session_join/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_session_join/</guid>
      <description> ruruku session join Joins a testing session
Synopsis Joins a testing session
ruruku session join &amp;lt;session-id&amp;gt; &amp;lt;participant-name&amp;gt; [flags]  Options  -h, --help help for join  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --server string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) --timeout uint32 Request timeout in seconds (default 10) -v, --verbose Sets the log level to debug  SEE ALSO  ruruku session - Controls a test session/run  Auto generated by spf13/cobra on 7-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku session list</title>
      <link>/ruruku/cli/ruruku_session_list/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_session_list/</guid>
      <description> ruruku session list Prints a table of the available sessions and their status
Synopsis Prints a table of the available sessions and their status
ruruku session list [flags]  Options  -h, --help help for list  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --server string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) --timeout uint32 Request timeout in seconds (default 10) -v, --verbose Sets the log level to debug  SEE ALSO  ruruku session - Controls a test session/run  Auto generated by spf13/cobra on 7-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku session start</title>
      <link>/ruruku/cli/ruruku_session_start/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_session_start/</guid>
      <description>ruruku session start Starts a new test session based on a test plan
Synopsis Starts a new test session based on a test plan
ruruku session start [flags]  Options  -h, --help help for start -n, --name string Name of the session -p, --plan string Path to the test plan of this session  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -o, --output string Output format.</description>
    </item>
    
    <item>
      <title>ruruku session updates</title>
      <link>/ruruku/cli/ruruku_session_updates/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_session_updates/</guid>
      <description> ruruku session updates Listens for changes in the session
Synopsis Listens for changes in the session
ruruku session updates &amp;lt;session-id&amp;gt; [flags]  Options  -h, --help help for updates -w, --wait-until-closed Stop listening once the session is closed (default true)  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --server string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) --timeout uint32 Request timeout in seconds (default 10) -v, --verbose Sets the log level to debug  SEE ALSO  ruruku session - Controls a test session/run  Auto generated by spf13/cobra on 7-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku start</title>
      <link>/ruruku/cli/ruruku_start/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_start/</guid>
      <description> ruruku start Creates a ruruku API server and starts a session
Synopsis Creates a ruruku API server and starts a session
ruruku start &amp;lt;testplan.yaml&amp;gt; [flags]  Options  -h, --help help for start  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -v, --verbose Sets the log level to debug  SEE ALSO  ruruku - A simple manual test coordinator  Auto generated by spf13/cobra on 7-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku test</title>
      <link>/ruruku/cli/ruruku_test/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_test/</guid>
      <description>ruruku test Claim or contribute to tests
Synopsis Claim or contribute to tests
ruruku test [flags]  Options  -h, --help help for test -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --server string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) --timeout uint32 Request timeout in seconds (default 10) -t, --token string Session participant token (use session join to get one)  Options inherited from parent commands  --config string config file (default is $HOME/.</description>
    </item>
    
    <item>
      <title>ruruku test claim</title>
      <link>/ruruku/cli/ruruku_test_claim/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_test_claim/</guid>
      <description> ruruku test claim Claim a test for a participant
Synopsis Claim a test for a participant
ruruku test claim &amp;lt;testcase-id&amp;gt; [flags]  Options  -h, --help help for claim  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --server string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) --timeout uint32 Request timeout in seconds (default 10) -t, --token string Session participant token (use session join to get one) -v, --verbose Sets the log level to debug  SEE ALSO  ruruku test - Claim or contribute to tests  Auto generated by spf13/cobra on 7-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku test contribute</title>
      <link>/ruruku/cli/ruruku_test_contribute/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_test_contribute/</guid>
      <description> ruruku test contribute Contribute results of a test execution
Synopsis Contribute results of a test execution
ruruku test contribute &amp;lt;testcase-id&amp;gt; passed|undecided|failed [flags]  Options  -m, --comment string Additional comment -h, --help help for contribute  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --server string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) --timeout uint32 Request timeout in seconds (default 10) -t, --token string Session participant token (use session join to get one) -v, --verbose Sets the log level to debug  SEE ALSO  ruruku test - Claim or contribute to tests  Auto generated by spf13/cobra on 7-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku test unclaim</title>
      <link>/ruruku/cli/ruruku_test_unclaim/</link>
      <pubDate>Fri, 07 Dec 2018 11:34:56 +0000</pubDate>
      
      <guid>/ruruku/cli/ruruku_test_unclaim/</guid>
      <description> ruruku test unclaim Unclaim a test for a participant
Synopsis Unclaim a test for a participant
ruruku test unclaim &amp;lt;testcase-id&amp;gt; [flags]  Options  -h, --help help for unclaim  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --server string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) --timeout uint32 Request timeout in seconds (default 10) -t, --token string Session participant token (use session join to get one) -v, --verbose Sets the log level to debug  SEE ALSO  ruruku test - Claim or contribute to tests  Auto generated by spf13/cobra on 7-Dec-2018 </description>
    </item>
    
  </channel>
</rss>