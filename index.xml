<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruruku</title>
    <link>/</link>
    <description>Recent content on Ruruku</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Dec 2018 21:55:14 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/introduction/</guid>
      <description>Ruruku is a manual test coordinator. Its goal is to make it easier for developers, teams, QA folks and robots to coordinate their testing efforts.
We think that testcase descriptions should live next to your code - in Ruruku the testplan is just a YAML file. When the time has come to go through the tests, submit your testplan to a Ruruku instance and start testing. Every tester (man or machine) can claim test cases, contribute their results and watch for updates.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/getting-started/</guid>
      <description>Ruruku ships as a single executable that contains the ruruku server and command-line interface. The former stores the data, serves the web-based UI and offers a gRPC API. You can talk to this server using the UI or a command-line interface. The latter can also be used to create testplans and add testcases.
Download Ruruku Ruruku can be downloaded from the release page. It runs on Linux, OSX and Windows.</description>
    </item>
    
    <item>
      <title>Securing your installation</title>
      <link>/secure-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/secure-installation/</guid>
      <description>By default Ruruku runs without any transport encryption/security. This way getting started is easy, but it&amp;rsquo;s not exactly secure.
Especially if you intent to expose your Ruruku installation to the internet, it&amp;rsquo;s a good idea to use TLS for the gRPC API server, and HTTPS/TLS for the UI server.
To enable TLS for the API server and HTTPS for the UI server, add the following to your config
server: ui: port: 443 https: enabled cert: ui.</description>
    </item>
    
    <item>
      <title>Managing user accounts</title>
      <link>/account-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/account-management/</guid>
      <description>Ruruku comes with built-in user management. Users are created using the CLI and are given permissions in the sytem. When a Ruruku server starts, it can emit a root token which is used to create the first users in the system.
Starting a server and adding users The ruruku serve command has two flags which emit a root token: --root-token-file &amp;lt;filename&amp;gt; and --root-token-stdout. The former stores the root token in a file, the later prints it to the stdout.</description>
    </item>
    
    <item>
      <title>Command Line Interface</title>
      <link>/cli/ruruku/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku/</guid>
      <description>ruruku A simple manual test coordinator
Synopsis A simple manual test coordinator
Options  --config string config file (default is $HOME/.ruruku.yaml) -h, --help help for ruruku -v, --verbose Sets the log level to debug  SEE ALSO  ruruku plan - Creates a new testplan ruruku serve - Starts a ruruku API server ruruku session - Controls a test session/run ruruku start - Creates a ruruku API server and starts a session ruruku test - Claim or contribute to tests ruruku user - Interacts with ruruku users, e.</description>
    </item>
    
    <item>
      <title>ruruku plan</title>
      <link>/cli/ruruku_plan/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_plan/</guid>
      <description>ruruku plan Creates a new testplan
Synopsis Creates a new testplan. It goes into interactive mode if called without flags, e.g.: ruruku plan
Most fields are available as flags as well, e.g.: ruruku plan -f testplan.yaml &amp;ndash;name Demo ruruku plan -f testplan.yaml add &amp;ndash;name &amp;ldquo;My testcase&amp;rdquo; &amp;ndash;id tc1 &amp;ndash;group grp
ruruku plan [flags]  Options  -f, --filename string the output filename -h, --help help for plan -i, --id string ID of the testplan -n, --name string name of the testplan -y, --non-interactive do not use an interactive prompt.</description>
    </item>
    
    <item>
      <title>ruruku plan add</title>
      <link>/cli/ruruku_plan_add/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_plan_add/</guid>
      <description>ruruku plan add Add a testcase to a plan
Synopsis Add a testcase to a plan
ruruku plan add [flags]  Options  -d, --description string long description - can be markdown -g, --group string testcase group -h, --help help for add --id string testcase ID (must be unique within the group) --min-tester-count uint32 number of testers for this testcase --must-pass test must pass for the testsuite to pass -n, --name string name/short description of the testcase -s, --steps string steps to perform during the test - can be markdown  Options inherited from parent commands  --config string config file (default is $HOME/.</description>
    </item>
    
    <item>
      <title>ruruku serve</title>
      <link>/cli/ruruku_serve/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_serve/</guid>
      <description>ruruku serve Starts a ruruku API server
Synopsis Starts a ruruku API server
ruruku serve [flags]  Options  --db string Path to the data storage location (default &amp;quot;ruruku.db&amp;quot;) -h, --help help for serve --root-token-file string Write a root token to a file --root-token-stdout Print a root token to stdout --ui-port int Port to run UI the server on (default 8080)  Options inherited from parent commands  --config string config file (default is $HOME/.</description>
    </item>
    
    <item>
      <title>ruruku session</title>
      <link>/cli/ruruku_session/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_session/</guid>
      <description>ruruku session Controls a test session/run
Synopsis Controls a test session/run
ruruku session [flags]  Options  -h, --help help for session --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --timeout uint32 Request timeout in seconds (default 10) --tls string Path to the server TLS certificate --token string User token for authenticating with ruruku  Options inherited from parent commands  --config string config file (default is $HOME/.</description>
    </item>
    
    <item>
      <title>ruruku session close</title>
      <link>/cli/ruruku_session_close/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_session_close/</guid>
      <description> ruruku session close Closes a testing session
Synopsis Closes a testing session
ruruku session close &amp;lt;session-id&amp;gt; [flags]  Options  -h, --help help for close  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --timeout uint32 Request timeout in seconds (default 10) --tls string Path to the server TLS certificate --token string User token for authenticating with ruruku -v, --verbose Sets the log level to debug  SEE ALSO  ruruku session - Controls a test session/run  Auto generated by spf13/cobra on 19-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku session describe</title>
      <link>/cli/ruruku_session_describe/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_session_describe/</guid>
      <description> ruruku session describe Prints session details and its testcases
Synopsis Prints session details and its testcases
ruruku session describe [flags]  Options  -h, --help help for describe  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --timeout uint32 Request timeout in seconds (default 10) --tls string Path to the server TLS certificate --token string User token for authenticating with ruruku -v, --verbose Sets the log level to debug  SEE ALSO  ruruku session - Controls a test session/run  Auto generated by spf13/cobra on 19-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku session join</title>
      <link>/cli/ruruku_session_join/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_session_join/</guid>
      <description> ruruku session join Joins a testing session
Synopsis Joins a testing session
ruruku session join &amp;lt;session-id&amp;gt; [flags]  Options  -h, --help help for join  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --timeout uint32 Request timeout in seconds (default 10) --tls string Path to the server TLS certificate --token string User token for authenticating with ruruku -v, --verbose Sets the log level to debug  SEE ALSO  ruruku session - Controls a test session/run  Auto generated by spf13/cobra on 19-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku session list</title>
      <link>/cli/ruruku_session_list/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_session_list/</guid>
      <description>ruruku session list Prints a table of the available sessions and their status
Synopsis Prints a table of the available sessions and their status
ruruku session list [flags]  Options  -h, --help help for list  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template.</description>
    </item>
    
    <item>
      <title>ruruku session start</title>
      <link>/cli/ruruku_session_start/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_session_start/</guid>
      <description>ruruku session start Starts a new test session based on a test plan
Synopsis Starts a new test session based on a test plan
ruruku session start [flags]  Options  -a, --annotations stringToString Metadata for this session (default []) -h, --help help for start -n, --name string Name of the session -p, --plan string Path to the test plan of this session  Options inherited from parent commands  --config string config file (default is $HOME/.</description>
    </item>
    
    <item>
      <title>ruruku session updates</title>
      <link>/cli/ruruku_session_updates/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_session_updates/</guid>
      <description>ruruku session updates Listens for changes in the session
Synopsis Listens for changes in the session
ruruku session updates &amp;lt;session-id&amp;gt; [flags]  Options  -h, --help help for updates -w, --wait-until-closed Stop listening once the session is closed (default true)  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format.</description>
    </item>
    
    <item>
      <title>ruruku start</title>
      <link>/cli/ruruku_start/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_start/</guid>
      <description> ruruku start Creates a ruruku API server and starts a session
Synopsis Creates a ruruku API server and starts a session
ruruku start &amp;lt;testplan.yaml&amp;gt; [flags]  Options  -h, --help help for start  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) -v, --verbose Sets the log level to debug  SEE ALSO  ruruku - A simple manual test coordinator  Auto generated by spf13/cobra on 19-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku test</title>
      <link>/cli/ruruku_test/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_test/</guid>
      <description>ruruku test Claim or contribute to tests
Synopsis Claim or contribute to tests
ruruku test [flags]  Options  -h, --help help for test --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template -s, --session string ID of the target test session - can also be RURUKU_SESSION env var --timeout uint32 Request timeout in seconds (default 10) --tls string Path to the server TLS certificate --token string User token for authenticating with ruruku  Options inherited from parent commands  --config string config file (default is $HOME/.</description>
    </item>
    
    <item>
      <title>ruruku test claim</title>
      <link>/cli/ruruku_test_claim/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_test_claim/</guid>
      <description> ruruku test claim Claim a test for a participant
Synopsis Claim a test for a participant
ruruku test claim &amp;lt;testcase-id&amp;gt; [flags]  Options  -h, --help help for claim  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template -s, --session string ID of the target test session - can also be RURUKU_SESSION env var --timeout uint32 Request timeout in seconds (default 10) --tls string Path to the server TLS certificate --token string User token for authenticating with ruruku -v, --verbose Sets the log level to debug  SEE ALSO  ruruku test - Claim or contribute to tests  Auto generated by spf13/cobra on 19-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku test contribute</title>
      <link>/cli/ruruku_test_contribute/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_test_contribute/</guid>
      <description>ruruku test contribute Contribute results of a test execution
Synopsis Contribute results of a test execution
ruruku test contribute &amp;lt;testcase-id&amp;gt; passed|undecided|failed [flags]  Options  -m, --comment string Additional comment -h, --help help for contribute  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template.</description>
    </item>
    
    <item>
      <title>ruruku test unclaim</title>
      <link>/cli/ruruku_test_unclaim/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_test_unclaim/</guid>
      <description> ruruku test unclaim Unclaim a test for a participant
Synopsis Unclaim a test for a participant
ruruku test unclaim &amp;lt;testcase-id&amp;gt; [flags]  Options  -h, --help help for unclaim  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template -s, --session string ID of the target test session - can also be RURUKU_SESSION env var --timeout uint32 Request timeout in seconds (default 10) --tls string Path to the server TLS certificate --token string User token for authenticating with ruruku -v, --verbose Sets the log level to debug  SEE ALSO  ruruku test - Claim or contribute to tests  Auto generated by spf13/cobra on 19-Dec-2018 </description>
    </item>
    
    <item>
      <title>ruruku user</title>
      <link>/cli/ruruku_user/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_user/</guid>
      <description>ruruku user Interacts with ruruku users, e.g. authenticates, adds or deletes users
Synopsis Interacts with ruruku users, e.g. authenticates, adds or deletes users
ruruku user [flags]  Options  -h, --help help for user --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --timeout uint32 Request timeout in seconds (default 10) --tls string Path to the server TLS certificate --token string User token for authenticating with ruruku  Options inherited from parent commands  --config string config file (default is $HOME/.</description>
    </item>
    
    <item>
      <title>ruruku user add</title>
      <link>/cli/ruruku_user_add/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_user_add/</guid>
      <description>ruruku user add Adds a new user
Synopsis Add a new user to a Ruruku installation. Users can be added from a file or using command line flags.
To add users from a file, use the -f flag pointing to a YAML file with username, password and email properties. The optional permission property can be used to add permissions at the same time, e.g.
username: foo password: ThisIsMySecretPassword email: foo@bar.</description>
    </item>
    
    <item>
      <title>ruruku user chpwd</title>
      <link>/cli/ruruku_user_chpwd/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_user_chpwd/</guid>
      <description>ruruku user chpwd Changes the password of a user
Synopsis Changes the password of a user
ruruku user chpwd [username] [flags]  Options  -h, --help help for chpwd --password string The user&#39;s password. Passwords on the command line are unsafe: use the interactive mode or RURUKU_PASSWORD env var instead  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format.</description>
    </item>
    
    <item>
      <title>ruruku user delete</title>
      <link>/cli/ruruku_user_delete/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_user_delete/</guid>
      <description>ruruku user delete Deletes a user
Synopsis Deletes a user
ruruku user delete &amp;lt;username&amp;gt; [flags]  Options  -h, --help help for delete  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template. Use with -o template --timeout uint32 Request timeout in seconds (default 10) --tls string Path to the server TLS certificate --token string User token for authenticating with ruruku -v, --verbose Sets the log level to debug  SEE ALSO  ruruku user - Interacts with ruruku users, e.</description>
    </item>
    
    <item>
      <title>ruruku user grant</title>
      <link>/cli/ruruku_user_grant/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_user_grant/</guid>
      <description>ruruku user grant Grants permissions to a user (requires user.grant permission)
Synopsis Grants permissions to a user (requires user.grant permission)
ruruku user grant &amp;lt;username&amp;gt; [flags]  Options  -h, --help help for grant -p, --permission stringArray Permission to add to the user  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format.</description>
    </item>
    
    <item>
      <title>ruruku user list</title>
      <link>/cli/ruruku_user_list/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_user_list/</guid>
      <description>ruruku user list Lists all users in the system (requires user.list permission)
Synopsis Lists all users in the system (requires user.list permission)
ruruku user list [flags]  Options  -h, --help help for list  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format. One of: string|json|template --output-template string Output format Go template.</description>
    </item>
    
    <item>
      <title>ruruku user login</title>
      <link>/cli/ruruku_user_login/</link>
      <pubDate>Wed, 19 Dec 2018 21:55:14 +0000</pubDate>
      
      <guid>/cli/ruruku_user_login/</guid>
      <description>ruruku user login Authenticates a user against an API server
Synopsis Authenticates a user against an API server
ruruku user login &amp;lt;username&amp;gt; [flags]  Options  -h, --help help for login --password string The user&#39;s password. Passwords on the command line are unsafe: use the interactive mode or RURUKU_PASSWORD env var instead  Options inherited from parent commands  --config string config file (default is $HOME/.ruruku.yaml) --host string Host address of the ruruku API server (default &amp;quot;localhost:1234&amp;quot;) -o, --output string Output format.</description>
    </item>
    
  </channel>
</rss>